# This is a makefile intended for compiling simple C++ projects.
# It assumes that you have one or more source files in the main directory,
#    each of which contains an "int main()".
# There may also be a "src" directory, containing additional source files.
# These are compiled into a single library, specified by the LIB_NAME variable.
# All include files will be automatically listed as dependencies.

LIB_NAME = MyLibrary
CFLAGS = -Iinclude -fPIC
LFLAGS = -Llib -l$(LIB_NAME) -Wl,-rpath,\$$ORIGIN/../lib

# EVERYTHING PAST HERE SHOULD WORK AUTOMATICALLY

.SECONDARY:

# Find the source files that will be used.
EXE_SRC_FILES = $(wildcard *.cc)
EXECUTABLES = $(patsubst %.cc,bin/%,$(EXE_SRC_FILES))
SRC_FILES = $(wildcard src/*.cc)
O_FILES = $(patsubst %.cc,build/%.o,$(SRC_FILES))

all: $(EXECUTABLES) lib/lib$(LIB_NAME).so

bin/%: build/%.o | lib/lib$(LIB_NAME).so
	@echo "Building $@"
	@mkdir -p $(@D)
	@g++ $< $(LFLAGS) -o $@

lib/lib$(LIB_NAME).so: $(O_FILES)
	@echo "Building $@"
	@mkdir -p $(@D)
	@g++ $^ -shared -Wl,-soname,lib$(LIB_NAME).so -o $@

build/%.o: %.cc
	@echo "Building $@"
	@mkdir -p $(@D)
	@g++ -c $(CFLAGS) $< -o $@

clean:
	@echo "Cleaning"
	@rm -rf bin build lib

# Update dependencies with each compilation
CFLAGS += -MMD
-include $(shell find build -name "*.d" 2> /dev/null)
